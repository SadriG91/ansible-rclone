# Molecule managed

{% if item.registry is defined %}
FROM {{ item.registry.url }}/{{ item.image }}
{% else %}
FROM {{ item.image }}
{% endif %}

{% if item.env is defined %}
{% for var, value in item.env.items() %}
{% if value %}
ENV {{ var }} {{ value }}
{% endif %}
{% endfor %}
{% endif %}

RUN if [ $(command -v apt-get) ]; then \
        apt-get update \
        && apt-get install -y -q --no-install-recommends \
            bash \
            ca-certificates \
            iproute2 \
            python3 \
            python3-pip \
            sudo \
        && apt-get clean; \
    elif [ $(command -v dnf) ]; then \
        dnf makecache \
        && dnf --assumeyes install \
            bash \
            iproute \
            python3 \
            python3-devel \
            python3-dnf \
            sudo \
        && dnf clean all; \
    elif [ $(command -v yum) ]; then \
        yum makecache fast \
        && yum install --assumeyes \
            bash \
            iproute \
            python \
            sudo \
            yum-plugin-ovl \
        && sed -i 's/plugins=0/plugins=1/g' /etc/yum.conf \
        && yum clean all; \
    elif [ $(command -v zypper) ]; then \
        zypper refresh \
        && zypper install -y \
            python \
            sudo \
            bash \
            python-xml \
            iproute2 \
        && zypper clean -a; \
    elif [ $(command -v apk) ]; then \
        apk update \
        && apk add --no-cache \
            python \
            sudo \
            bash \
            ca-certificates; \
    elif [ $(command -v xbps-install) ]; then \
        xbps-install -Syu \
        && xbps-install -y \
            python \
            sudo \
            bash \
            ca-certificates \
            iproute2 \
        && xbps-remove -O; \
    fi
